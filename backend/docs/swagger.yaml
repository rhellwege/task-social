basePath: /
definitions:
  handlers.CreatedResponse:
    properties:
      id:
        type: string
      message:
        type: string
    type: object
  handlers.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  handlers.LoginUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  handlers.RegisterUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  handlers.SuccessResponse:
    properties:
      message:
        type: string
    type: object
  handlers.SuccessfulLoginResponse:
    properties:
      message:
        type: string
      token:
        type: string
    type: object
  handlers.UpdateClubRequest:
    properties:
      banner_image:
        type: string
      description:
        type: string
      is_public:
        type: boolean
      name:
        type: string
    type: object
  handlers.UpdateUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
      profile_picture:
        type: string
      username:
        type: string
    type: object
  handlers.UploadClubBannerResponse:
    properties:
      message:
        type: string
      url:
        type: string
    type: object
  handlers.UploadProfilePictureResponse:
    properties:
      message:
        type: string
      url:
        type: string
    type: object
  handlers.VersionResponse:
    properties:
      build_date:
        type: string
      commit_hash:
        type: string
      version:
        type: string
    type: object
  repository.Club:
    properties:
      banner_image:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      is_public:
        type: boolean
      name:
        type: string
      owner_user_id:
        type: string
      updated_at:
        type: string
    type: object
  repository.GetClubLeaderboardRow:
    properties:
      id:
        type: string
      joined_at:
        type: string
      profile_picture:
        type: string
      user_points:
        type: number
      user_streak:
        type: integer
      username:
        type: string
    type: object
  repository.GetUserClubsRow:
    properties:
      banner_image:
        type: string
      club_id:
        type: string
      created_at:
        type: string
      description:
        type: string
      joined_at:
        type: string
      name:
        type: string
      user_points:
        type: number
      user_streak:
        type: integer
    type: object
  repository.GetUserDisplayRow:
    properties:
      created_at:
        type: string
      profile_picture:
        type: string
      username:
        type: string
    type: object
  services.CreateClubRequest:
    properties:
      banner_image:
        type: string
      description:
        type: string
      is_public:
        type: boolean
      name:
        type: string
    type: object
host: localhost:5050
info:
  contact: {}
  description: API services for the Task Social app
  title: Task Social API
  version: "0.1"
paths:
  /api/{club_id}:
    get:
      description: Get club info
      operationId: GetClub
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repository.Club'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get club info
      tags:
      - Club
  /api/club:
    post:
      consumes:
      - application/json
      description: Create a new club with the provided details.
      operationId: CreateClub
      parameters:
      - description: User update details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/services.CreateClubRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.CreatedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new club
      tags:
      - Club
  /api/club/{club_id}:
    delete:
      description: Delete a club with the given ID.
      operationId: DeleteClub
      parameters:
      - description: Club ID
        in: path
        name: club_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SuccessResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a club
      tags:
      - Club
    put:
      consumes:
      - application/json
      description: Update a club with the given ID.
      operationId: UpdateClub
      parameters:
      - description: Club ID
        in: path
        name: club_id
        required: true
        type: string
      - description: Club update params
        in: body
        name: club
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateClubRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update a club
      tags:
      - Club
  /api/club/{club_id}/join:
    post:
      description: Join a club with the given ID.
      operationId: JoinClub
      parameters:
      - description: Club ID
        in: path
        name: club_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SuccessResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Join a club
      tags:
      - Club
  /api/club/{club_id}/leaderboard:
    get:
      consumes:
      - application/json
      description: Get a club's leaderboard with the given ID.
      operationId: GetClubLeaderboard
      parameters:
      - description: Club ID
        in: path
        name: club_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/repository.GetClubLeaderboardRow'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get a club's leaderboard
      tags:
      - Club
  /api/club/{club_id}/leave:
    post:
      description: Leave a club with the given ID.
      operationId: LeaveClub
      parameters:
      - description: Club ID
        in: path
        name: club_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SuccessResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Leave a club
      tags:
      - Club
  /api/club/{clubID}/banner:
    post:
      consumes:
      - multipart/form-data
      description: Upload a new banner image for the specified club
      parameters:
      - description: Club banner file
        in: formData
        name: image
        required: true
        type: file
      - description: Club ID
        in: path
        name: clubID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.UploadClubBannerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Upload a club banner
      tags:
      - Club
  /api/clubs:
    get:
      description: Get a list of public clubs.
      operationId: GetPublicClubs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/repository.Club'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get public clubs
      tags:
      - Club
  /api/login:
    post:
      consumes:
      - application/json
      description: Login a user with (email or username) and password
      operationId: LoginUser
      parameters:
      - description: User login credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SuccessfulLoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Login a user
      tags:
      - User
  /api/register:
    post:
      consumes:
      - application/json
      description: Register a new user with email, username, and password
      operationId: RegisterUser
      parameters:
      - description: User registration details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.RegisterUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.SuccessfulLoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Register a new user
      tags:
      - User
  /api/user:
    get:
      consumes:
      - application/json
      description: Get user information by ID
      operationId: GetUser
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repository.GetUserDisplayRow'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get user information
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update an existing user's details, all parameters are optional.
      operationId: UpdateUser
      parameters:
      - description: User update details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update an existing user
      tags:
      - User
  /api/user/clubs:
    get:
      description: Get a list of a user's joined clubs
      operationId: GetUserClubs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/repository.GetUserClubsRow'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get a list of a user's joined clubs
      tags:
      - User
  /api/user/profile-picture:
    post:
      consumes:
      - multipart/form-data
      description: Upload a new profile picture for the authenticated user
      parameters:
      - description: Profile picture file
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.UploadProfilePictureResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Upload a profile picture
      tags:
      - User
  /api/version:
    get:
      description: Current version of the API
      operationId: Version
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.VersionResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get the current version of the API
      tags:
      - Util
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
